name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
  
  release_assets:
    runs-on: ubuntu-latest
    needs:
    - create_release
    strategy:
      matrix:
        os: 
          - linux
          - win
          - macos

        include:
        - os: linux

        - os: win
          zenity_filename: zenity_win64.zip

        - os: macos
          zenity_filename: zenity_macos.zip

    env:
      CMD_NAME: dialogs
      HAXE_VERSION: latest
      NODE_VERSION: 16
      ZENITY_TAG: v0.8.9

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install lix, haxe ${{ env.HAXE_VERSION }} and dependencies
      run: |
            npm i -g lix
            lix install haxe ${{ env.HAXE_VERSION }}
            lix download

    - name: Compile project
      run: haxe deploy.hxml

    - name: Create lib directory
      run: |
        mkdir lib

    - name: Get zenity for mac or windows
      uses: robinraju/release-downloader@v1
      if: matrix.os != 'linux'
      with:
        repository: ncruces/zenity
        tag: ${{ env.ZENITY_TAG }}
        fileName: ${{ matrix.zenity_filename }}

    - name: Extract zenity files
      if: matrix.os != 'linux'
      run: |
        7z x ${{ matrix.zenity_filename }} -olib
        
    - name: Package to release
      run: |
        mkdir -p tmp/${{ env.CMD_NAME }}
        mv index.js tmp/${{ env.CMD_NAME }}
        mv readme.md tmp/${{ env.CMD_NAME }}
        mv lib tmp/${{ env.CMD_NAME }}

    - uses: papeloto/action-zip@v1
      with:
        files: tmp/
        dest: ${{ env.CMD_NAME }}-${{ matrix.os }}.zip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: ${{ env.CMD_NAME }}-${{ matrix.os }}.zip
        asset_path: ${{ env.CMD_NAME }}-${{ matrix.os }}.zip
        asset_content_type: application/octet-stream